{"version":3,"sources":["components/Barcode/Barcode.module.css","components/Header/Header.module.css","state/useBarcodes.js","components/Button/Button.js","components/Button/index.js","components/Container/Container.js","components/Container/index.js","components/Header/Header.js","components/Header/index.js","components/Barcode/jsBarcode.options.js","components/Barcode/Barcode.js","components/Barcode/index.js","components/AddButton/AddButton.js","components/AddButton/index.js","App.js","serviceWorker.js","index.js","components/AddButton/AddButton.module.css","components/Button/Button.module.css","components/Container/Container.module.css"],"names":["module","exports","Barcode","BarcodeSvg","BarcodeSpace","BarcodeRemove","BarcodeInput","Header","HeaderTitle","HeaderContent","storageKey","types","clear","change","remove","mapTypesToReactions","_mapTypesToReactions","Object","defineProperty","state","action","map","bc","id","payload","filter","add","concat","toConsumableArray","barcodesReducer","reaction","type","useBarcodes","_useReducer","useReducer","JSON","parse","localStorage","getItem","_useReducer2","slicedToArray","barcodes","dispatch","actions","barcode","Date","now","code","useEffect","setItem","stringify","saveBarcodes","Button","props","children","onClick","react_default","a","createElement","react","className","styles","defaultProps","Container","_ref","jsBarcodeOptions","encoder","code128","renderer","svgRenderer","width","height","fontSize","margins","Space","margin","style","onChange","onRemove","svgRef","useRef","showSvgNode","JsBarcode","current","title","ref","value","e","objectSpread","target","placeholder","memo","AddButton","AddButtonContainer","App","_useBarcodes","components_Header","components_Button","window","print","components_Container","components_Barcode","key","components_AddButton","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+GACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,WAAA,4BAAAC,aAAA,8BAAAC,cAAA,+BAAAC,aAAA,uECAlBN,EAAAC,QAAA,CAAkBM,OAAA,uBAAAC,YAAA,4BAAAC,cAAA,4ICWZC,EAAa,WAyBnB,IAAMC,EAAQ,CACZC,MAAO,QACPC,OAAQ,SACRC,OAAQ,UAGJC,GAAmBC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACtBL,EAAMC,MAAQ,iBAAM,KADEK,OAAAC,EAAA,EAAAD,CAAAD,EAEtBL,EAAME,OAAS,SAACM,EAAOC,GAAR,OAAmBD,EAAME,IAAI,SAAAC,GAAE,OAAIA,EAAGC,KAAOH,EAAOI,QAAQD,GAAKH,EAAOI,QAAUF,MAF3EL,OAAAC,EAAA,EAAAD,CAAAD,EAGtBL,EAAMG,OAAS,SAACK,EAAOC,GAAR,OAAmBD,EAAMM,OAAO,SAAAH,GAAE,OAAIA,EAAGC,KAAOH,EAAOI,QAAQD,OAHxDN,OAAAC,EAAA,EAAAD,CAAAD,EAItBL,EAAMe,IAAM,SAACP,EAAOC,GAAR,SAAAO,OAAAV,OAAAW,EAAA,EAAAX,CAAuBE,GAAvB,CAA8BC,EAAOI,YAJ3BR,GAOzB,SAASa,EAAgBV,EAAOC,GAC9B,IAAMU,EAAWf,EAAoBK,EAAOW,MAC5C,OAAOD,EAAWA,EAASX,EAAOC,GAAUD,EA0B/Ba,MAnBf,WAAuB,IAAAC,EACQC,qBAAWL,EA1CjCM,KAAKC,MAAMC,aAAaC,QAAQ5B,KAAgB,IAyClC6B,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAgB,EAAA,GACdQ,EADcF,EAAA,GACJG,EADIH,EAAA,GAEfI,EAAU,CACd/B,MAAO,kBAAM8B,EAAS,CAAEX,KAAMpB,EAAMC,SACpCC,OAAQ,SAAA+B,GAAO,OAAIF,EAAS,CAAEX,KAAMpB,EAAME,OAAQW,QAASoB,KAC3D9B,OAAQ,SAAA8B,GAAO,OAAIF,EAAS,CAAEX,KAAMpB,EAAMG,OAAQU,QAASoB,KAC3DlB,IAAK,kBAAMgB,EAAS,CAAEX,KAAMpB,EAAMe,IAAKF,QApClC,CACLD,GAAIsB,KAAKC,MACTC,KAAM,QA4CR,OAPAC,oBACE,YA7CJ,SAAsBP,GACpBJ,aAAaY,QAAQvC,EAAYyB,KAAKe,UAAUT,IA6C5CU,CAAaV,IAEf,CAACA,IAGI,CAAEA,WAAUE,4BCzDrB,SAASS,EAAOC,GAAO,IAEnBC,EAGED,EAHFC,SACAvB,EAEEsB,EAFFtB,KACAwB,EACEF,EADFE,QAGF,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,UACE3B,KAAMA,EACNwB,QAASA,EACTK,UAAWC,IAAOT,QAEjBE,GAEF,KAMPF,EAAOU,aA1Bc,CACnB/B,KAAM,UA2BOqB,ICpCAA,EDoCAA,kBEpBAW,IChBAA,EDMf,SAAAC,GAAiC,IAAZV,EAAYU,EAAZV,SACnB,OACEE,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOE,WACpBT,oBEUQ/C,ICnBAA,EDMf,SAAgB8C,GAAO,IACbC,EAAaD,EAAbC,SAER,OACEE,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOtD,QACrBiD,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAOrD,aAAtB,YACAgD,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOpD,eAAgB6C,gEEF9BW,EATU,CACvBC,QAASC,IACTC,SAAUC,IACVC,MAAO,EACPC,OAAQ,IACRC,SAAU,GACVC,QAAS,oBCFX,SAASC,IACP,IACMH,EAASN,EAAiBM,OACA,EAA3BN,EAAiBQ,QACjBR,EAAiBO,SAAW,EAC5BG,GAEL,OACEnB,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAAEL,SAAQI,OAPT,IAOmBf,UAAWC,IAAOzD,cAAlD,SA0DWF,ICvEAA,ED6Bf,SAAiBmD,GAAO,IACdT,EAAgCS,EAAhCT,QAASiC,EAAuBxB,EAAvBwB,SAAUC,EAAazB,EAAbyB,SACrBC,EAASC,iBAAO,MAChBC,GAAeF,GAAWA,GAAUnC,EAAQG,KAUlD,OATAC,oBACE,WACMJ,EAAQG,MACVmC,IAAUH,EAAOI,QAASvC,EAAQG,KAAMkB,IAG5C,CAACrB,IAIDY,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAO3D,SACrBsD,EAAAC,EAAAC,cAAA,UACEE,UAAWC,IAAOxD,cAClBkD,QAAS,kBAAMuB,EAASlC,IACxBb,KAAK,SACLqD,MAAM,kBAJR,KAQCH,GAAezB,EAAAC,EAAAC,cAAA,OAAK2B,IAAKN,EAAQnB,UAAWC,IAAO1D,cAClD8E,GAAezB,EAAAC,EAAAC,cAACgB,EAAD,MACjBlB,EAAAC,EAAAC,cAAA,SAAOE,UAAWC,IAAOvD,cACvBkD,EAAAC,EAAAC,cAAA,SACE3B,KAAK,OACLR,GAAE,OAAAI,OAASiB,EAAQrB,IACnB+D,MAAO1C,EAAQG,KACf8B,SAAU,SAAAU,GAAC,OAAIV,EAAS5D,OAAAuE,EAAA,EAAAvE,CAAA,GAAK2B,EAAN,CAAeG,KAAMwC,EAAEE,OAAOH,UACrDI,YAAY,MAEdlC,EAAAC,EAAAC,cAAA,gCEtCOiC,ICxBAC,EDwBAD,eAlBf,SAAmBtC,GAAO,IAChBE,EAAYF,EAAZE,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAOgC,oBACrBrC,EAAAC,EAAAC,cAAA,UACEE,UAAWC,IAAO+B,UAClBrC,QAASA,EACTxB,KAAK,SACLqD,MAAM,eAJR,OAcyB,kBAAM,IEMtBU,MAxBf,WAAe,IAAAC,EACiB/D,IAAtBS,EADKsD,EACLtD,SAAUE,EADLoD,EACKpD,QAElB,OACEa,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAD,CAAQ1C,QAASZ,EAAQ/B,OAAzB,SACA4C,EAAAC,EAAAC,cAACuC,EAAD,CAAQ1C,QAAS,kBAAM2C,OAAOC,UAA9B,UAEF3C,EAAAC,EAAAC,cAAC0C,EAAD,KACG3D,EAASpB,IAAI,SAAAuB,GAAO,OACnBY,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,IAAK1D,EAAQrB,GACbqB,QAASA,EACTiC,SAAUlC,EAAQ9B,OAClBiE,SAAUnC,EAAQ7B,WAGtB0C,EAAAC,EAAAC,cAAC6C,EAAD,CAAWhD,QAASZ,EAAQjB,SClB9B8E,EAAcC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnG,QACf6F,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,gHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KCtFjEC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SDY1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,YAAwBpC,OAAOQ,SAAS6B,MACpDC,SAAWtC,OAAOQ,SAAS8B,OAIvC,OAGFtC,OAAOuC,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAAnF,OAAM2G,YAAN,sBAEP9B,GAgEV,SAAiCM,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BjB,OAAOQ,SAASyC,aAKpBtC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,MCtC/BE,sBCXAjH,EAAAC,QAAA,CAAkB4F,mBAAA,sCAAAD,UAAA,6BAAAxF,aAAA,gCAAAE,aAAA,oDCAlBN,EAAAC,QAAA,CAAkBmD,OAAA,2CCAlBpD,EAAAC,QAAA,CAAkB8D,UAAA","file":"static/js/main.11ec32f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Barcode\":\"Barcode_Barcode__ZaEvC\",\"BarcodeSvg\":\"Barcode_BarcodeSvg__1yX17\",\"BarcodeSpace\":\"Barcode_BarcodeSpace__JP4Lr\",\"BarcodeRemove\":\"Barcode_BarcodeRemove__2p9-E\",\"BarcodeInput\":\"Barcode_BarcodeInput__3lUa8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2sF2n\",\"HeaderTitle\":\"Header_HeaderTitle__3uYHN\",\"HeaderContent\":\"Header_HeaderContent__3szWl\"};","/**\n * useBarcodes.\n */\n\nimport { useReducer, useEffect } from 'react';\n\n/**\n * @typedef {Object} BarcodeType\n * @property {number} id\n * @property {string} code\n */\n\nconst storageKey = 'barcodes';\n\n/**\n * @return {BarcodeType[]}\n */\nfunction getBarcodes() {\n  return JSON.parse(localStorage.getItem(storageKey)) || [];\n}\n\n/**\n * @param {BarcodeType[]} barcodes\n */\nfunction saveBarcodes(barcodes) {\n  localStorage.setItem(storageKey, JSON.stringify(barcodes))\n}\n\nfunction createNewBarcode() {\n  return {\n    id: Date.now(),\n    code: '',\n  };\n}\n\n// Actions.\n\nconst types = {\n  clear: 'clear',\n  change: 'change',\n  remove: 'remove',\n};\n\nconst mapTypesToReactions = {\n  [types.clear]: () => [],\n  [types.change]: (state, action) => state.map(bc => bc.id === action.payload.id ? action.payload : bc),\n  [types.remove]: (state, action) => state.filter(bc => bc.id !== action.payload.id),\n  [types.add]: (state, action) => [...state, action.payload],\n};\n\nfunction barcodesReducer(state, action) {\n  const reaction = mapTypesToReactions[action.type];\n  return reaction ? reaction(state, action) : state;\n}\n\n/**\n * @return {{barcodes: BarcodeType[], actions: {clear: Function, change: function(BarcodeType),\n *   remove: function(BarcodeType), add: Function}}}\n */\nfunction useBarcodes() {\n  const [barcodes, dispatch] = useReducer(barcodesReducer, getBarcodes());\n  const actions = {\n    clear: () => dispatch({ type: types.clear }),\n    change: barcode => dispatch({ type: types.change, payload: barcode }),\n    remove: barcode => dispatch({ type: types.remove, payload: barcode }),\n    add: () => dispatch({ type: types.add, payload: createNewBarcode() }),\n  };\n\n  useEffect(\n    () => {\n      saveBarcodes(barcodes);\n    },\n    [barcodes],\n  );\n\n  return { barcodes, actions };\n}\n\nexport default useBarcodes;\n","/**\n * Button.\n */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  type: 'button',\n};\n\nfunction Button(props) {\n  const {\n    children,\n    type,\n    onClick,\n  } = props;\n\n  return (\n    <Fragment>\n      <button\n        type={type}\n        onClick={onClick}\n        className={styles.Button}\n      >\n        {children}\n      </button>\n      {' '}\n    </Fragment>\n  );\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","/**\n * index.\n */\n\nimport Button from './Button';\n\nexport default Button;\n","/**\n * Container.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nfunction Container({ children }) {\n  return (\n    <div className={styles.Container}>\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = propTypes;\n\nexport default Container;\n","/**\n * index.\n */\n\nimport Container from './Container';\n\nexport default Container;\n","/**\n * Header.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Header.module.css';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nfunction Header(props) {\n  const { children } = props;\n\n  return (\n    <div className={styles.Header}>\n      <h1 className={styles.HeaderTitle}>Barcoder</h1>\n      <div className={styles.HeaderContent}>{children}</div>\n    </div>\n  );\n}\n\nHeader.propTypes = propTypes;\n\nexport default Header;\n","/**\n * index.\n */\n\nimport Header from './Header';\n\nexport default Header;\n","/**\n * jsBarcode.options.\n */\n\nimport code128 from 'jsbarcode/lib/barcodes/CODE128/CODE128_AUTO';\nimport svgRenderer from 'jsbarcode/lib/renderers/svg';\n\nconst jsBarcodeOptions = {\n  encoder: code128,\n  renderer: svgRenderer,\n  width: 2,\n  height: 100,\n  fontSize: 20,\n  margins: 16,\n};\n\nexport default jsBarcodeOptions;\n","/**\n * Barcode.\n */\n\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport JsBarcode from 'jsbarcode';\nimport jsBarcodeOptions from './jsBarcode.options';\nimport styles from './Barcode.module.css';\n\n\nfunction Space() {\n  const margin = 16;\n  const height = jsBarcodeOptions.height\n    + (jsBarcodeOptions.margins * 2)\n    + (jsBarcodeOptions.fontSize / 2)\n    - (margin * 2);\n\n  return (\n    <div style={{ height, margin }} className={styles.BarcodeSpace}>\n      empty\n    </div>\n  );\n}\n\n\nconst propTypes = {\n  barcode: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    code: PropTypes.string,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nfunction Barcode(props) {\n  const { barcode, onChange, onRemove } = props;\n  const svgRef = useRef(null);\n  const showSvgNode = !svgRef || (svgRef && barcode.code);\n  useEffect(\n    () => {\n      if (barcode.code) {\n        JsBarcode(svgRef.current, barcode.code, jsBarcodeOptions)\n      }\n    },\n    [barcode]\n  );\n\n  return (\n    <div className={styles.Barcode}>\n      <button\n        className={styles.BarcodeRemove}\n        onClick={() => onRemove(barcode)}\n        type=\"button\"\n        title=\"Remove barcode\"\n      >\n        +\n      </button>\n      {showSvgNode && <svg ref={svgRef} className={styles.BarcodeSvg}/>}\n      {!showSvgNode && <Space />}\n      <label className={styles.BarcodeInput}>\n        <input\n          type=\"text\"\n          id={`bci_${barcode.id}`}\n          value={barcode.code}\n          onChange={e => onChange({ ...barcode, code: e.target.value })}\n          placeholder=\" \"\n        />\n        <span />\n      </label>\n    </div>\n  );\n}\n\nBarcode.propTypes = propTypes;\n\n\nexport default Barcode;\n","/**\n * index.\n */\n\nimport Barcode from './Barcode';\n\nexport default Barcode;\n","/**\n * AddButton.\n */\n\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './AddButton.module.css';\n\nconst propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction AddButton(props) {\n  const { onClick } = props;\n  return (\n    <div className={styles.AddButtonContainer}>\n      <button\n        className={styles.AddButton}\n        onClick={onClick}\n        type=\"button\"\n        title=\"Add barcode\"\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nAddButton.propTypes = propTypes;\n\nexport default memo(AddButton, () => true);\n","/**\n * index.\n */\n\nimport AddButton from './AddButton';\n\nexport default AddButton;\n","/**\n * App.js\n */\n\nimport React, { Fragment } from 'react';\nimport useBarcodes from './state/useBarcodes';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport Header from './components/Header';\nimport Barcode from './components/Barcode';\nimport AddButton from './components/AddButton';\n\nfunction App() {\n  const { barcodes, actions } = useBarcodes();\n\n  return (\n    <Fragment>\n      <Header>\n        <Button onClick={actions.clear}>Clear</Button>\n        <Button onClick={() => window.print()}>Print</Button>\n      </Header>\n      <Container>\n        {barcodes.map(barcode => (\n          <Barcode\n            key={barcode.id}\n            barcode={barcode}\n            onChange={actions.change}\n            onRemove={actions.remove}\n          />\n        ))}\n        <AddButton onClick={actions.add} />\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * index.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButtonContainer\":\"AddButton_AddButtonContainer__2o5Hj\",\"AddButton\":\"AddButton_AddButton__2Uhzr\",\"BarcodeSpace\":\"AddButton_BarcodeSpace__1KmMt\",\"BarcodeInput\":\"AddButton_BarcodeInput__1bgoY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2ht5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__21Tr_\"};"],"sourceRoot":""}