{"version":3,"sources":["components/Button/Button.module.css","components/Container/Container.module.css","components/Barcode/Barcode.module.css","state/useBarcodes.js","components/Button/Button.js","components/Button/index.js","components/Container/Container.js","components/Container/index.js","components/Header/Header.js","components/Header/index.js","components/Input/Input.js","components/Input/index.js","components/Barcode/jsBarcode.options.js","components/Barcode/Barcode.js","components/Barcode/index.js","components/AddButton/AddButton.js","components/AddButton/index.js","App.js","serviceWorker.js","index.js","components/Header/Header.module.css","components/Input/Input.module.css","components/AddButton/AddButton.module.css"],"names":["module","exports","Button","Container","Barcode","BarcodeSvg","BarcodeSpace","BarcodeRemove","BarcodeCodeInput","Hidden","storageKey","types","clear","change","remove","mapTypesToReactions","_mapTypesToReactions","Object","defineProperty","state","action","map","bc","id","payload","filter","add","concat","toConsumableArray","barcodesReducer","reaction","type","useBarcodes","_useReducer","useReducer","JSON","parse","localStorage","getItem","_useReducer2","slicedToArray","barcodes","dispatch","actions","barcode","Date","now","code","comment","useEffect","setItem","stringify","saveBarcodes","props","children","onClick","react_default","a","createElement","react","className","styles","defaultProps","_ref","Header","HeaderTitle","HeaderContent","Input","value","_props$name","name","onChange","label","visibleOnPrint","inputClassName","classNames","Printable","maxLength","placeholder","memo","jsBarcodeOptions","encoder","code128","renderer","svgRenderer","width","height","fontSize","margins","Space","margin","style","getSvgStyle","showSvgNode","display","onRemove","svgRef","useRef","_useState","useState","_useState2","error","setError","JsBarcode","current","e","title","ref","components_Input","objectSpread","target","prev","next","AddButton","AddButtonContainer","App","_useBarcodes","components_Header","components_Button","window","print","components_Container","components_Barcode","key","components_AddButton","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","BarcodeInput"],"mappings":"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","file":"static/js/main.79cd88c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2ht5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__21Tr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Barcode\":\"Barcode_Barcode__ZaEvC\",\"BarcodeSvg\":\"Barcode_BarcodeSvg__1yX17\",\"BarcodeSpace\":\"Barcode_BarcodeSpace__JP4Lr\",\"BarcodeRemove\":\"Barcode_BarcodeRemove__2p9-E\",\"BarcodeCodeInput\":\"Barcode_BarcodeCodeInput__32-vp\",\"Hidden\":\"Barcode_Hidden__OaRba\"};","/**\n * useBarcodes.\n */\n\nimport { useReducer, useEffect } from 'react';\n\n/**\n * @typedef {Object} BarcodeType\n * @property {number} id\n * @property {string} code\n * @property {string} comment\n */\n\nconst storageKey = 'barcodes';\n\n/**\n * @return {BarcodeType[]}\n */\nfunction getBarcodes() {\n  return JSON.parse(localStorage.getItem(storageKey)) || [];\n}\n\n/**\n * @param {BarcodeType[]} barcodes\n */\nfunction saveBarcodes(barcodes) {\n  localStorage.setItem(storageKey, JSON.stringify(barcodes))\n}\n\nfunction createNewBarcode() {\n  return {\n    id: Date.now(),\n    code: '',\n    comment: '',\n  };\n}\n\n// Actions.\n\nconst types = {\n  clear: 'clear',\n  change: 'change',\n  remove: 'remove',\n};\n\nconst mapTypesToReactions = {\n  [types.clear]: () => [],\n  [types.change]: (state, action) => state.map(bc => bc.id === action.payload.id ? action.payload : bc),\n  [types.remove]: (state, action) => state.filter(bc => bc.id !== action.payload.id),\n  [types.add]: (state, action) => [...state, action.payload],\n};\n\nfunction barcodesReducer(state, action) {\n  const reaction = mapTypesToReactions[action.type];\n  return reaction ? reaction(state, action) : state;\n}\n\n/**\n * @return {{barcodes: BarcodeType[], actions: {clear: Function, change: function(BarcodeType),\n *   remove: function(BarcodeType), add: Function}}}\n */\nfunction useBarcodes() {\n  const [barcodes, dispatch] = useReducer(barcodesReducer, getBarcodes());\n  const actions = {\n    clear: () => dispatch({ type: types.clear }),\n    change: barcode => dispatch({ type: types.change, payload: barcode }),\n    remove: barcode => dispatch({ type: types.remove, payload: barcode }),\n    add: () => dispatch({ type: types.add, payload: createNewBarcode() }),\n  };\n\n  useEffect(\n    () => {\n      saveBarcodes(barcodes);\n    },\n    [barcodes],\n  );\n\n  return { barcodes, actions };\n}\n\nexport default useBarcodes;\n","/**\n * Button.\n */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  type: 'button',\n};\n\nfunction Button(props) {\n  const {\n    children,\n    type,\n    onClick,\n  } = props;\n\n  return (\n    <Fragment>\n      <button\n        type={type}\n        onClick={onClick}\n        className={styles.Button}\n      >\n        {children}\n      </button>\n      {' '}\n    </Fragment>\n  );\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","/**\n * index.\n */\n\nimport Button from './Button';\n\nexport default Button;\n","/**\n * Container.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nfunction Container({ children }) {\n  return (\n    <div className={styles.Container}>\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = propTypes;\n\nexport default Container;\n","/**\n * index.\n */\n\nimport Container from './Container';\n\nexport default Container;\n","/**\n * Header.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Header.module.css';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nfunction Header(props) {\n  const { children } = props;\n\n  return (\n    <div className={styles.Header}>\n      <h1 className={styles.HeaderTitle}>Barcoder</h1>\n      <div className={styles.HeaderContent}>{children}</div>\n    </div>\n  );\n}\n\nHeader.propTypes = propTypes;\n\nexport default Header;\n","/**\n * index.\n */\n\nimport Header from './Header';\n\nexport default Header;\n","/**\n * Input.\n */\n\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Input.module.css';\n\nconst propTypes = {\n  value: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  visibleOnPrint: PropTypes.bool,\n};\n\nconst defaultProps = {\n  value: '',\n  visibleOnPrint: false,\n};\n\nfunction Input(props) {\n  const {\n    value,\n    id,\n    name = id,\n    onChange,\n    label,\n    className,\n    visibleOnPrint,\n  } = props;\n\n  const inputClassName = classNames(\n    styles.Input,\n    visibleOnPrint && !!value && styles.Printable,\n    className,\n  );\n\n  return (\n    <label className={inputClassName}>\n      <input\n        type=\"text\"\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        maxLength={25}\n        placeholder=\" \"\n      />\n      <span>{label}</span>\n    </label>\n  );\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\n\nexport default memo(Input);\n","/**\n * index.\n */\n\nimport Input from './Input';\n\nexport default Input;\n","/**\n * jsBarcode.options.\n */\n\nimport code128 from 'jsbarcode/lib/barcodes/CODE128/CODE128_AUTO';\nimport svgRenderer from 'jsbarcode/lib/renderers/svg';\n\nconst jsBarcodeOptions = {\n  encoder: code128,\n  renderer: svgRenderer,\n  width: 2,\n  height: 100,\n  fontSize: 20,\n  margins: 16,\n};\n\nexport default jsBarcodeOptions;\n","/**\n * Barcode.\n */\n\nimport React, { useRef, useEffect, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport JsBarcode from 'jsbarcode';\nimport Input from '../Input';\nimport jsBarcodeOptions from './jsBarcode.options';\nimport styles from './Barcode.module.css';\n\n\nfunction Space({ children }) {\n  const margin = 16;\n  const height = jsBarcodeOptions.height\n    + (jsBarcodeOptions.margins * 2)\n    + (jsBarcodeOptions.fontSize / 2)\n    - (margin * 2);\n\n  return (\n    <div style={{ height, margin }} className={styles.BarcodeSpace}>\n      {children}\n    </div>\n  );\n}\n\nfunction getSvgStyle(showSvgNode) {\n  return {\n    display: showSvgNode ? 'block' : 'none',\n  };\n}\n\n\nconst propTypes = {\n  barcode: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    code: PropTypes.string,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nfunction Barcode(props) {\n  const { barcode, onChange, onRemove } = props;\n\n  const svgRef = useRef(null);\n  const [error, setError] = useState('');\n\n  const showSvgNode = !error && (!svgRef || (svgRef && barcode.code));\n\n  useEffect(\n    () => {\n      if (barcode.code) {\n        try {\n          JsBarcode(svgRef.current, barcode.code, jsBarcodeOptions);\n          if (error) setError('');\n        }\n        catch (e) {\n          setError('invalid input')\n        }\n      }\n    },\n    [barcode]\n  );\n\n  const className = classNames(styles.Barcode, !showSvgNode && styles.Hidden);\n\n  return (\n    <div className={className}>\n      <button\n        className={styles.BarcodeRemove}\n        onClick={() => onRemove(barcode)}\n        type=\"button\"\n        title=\"Remove barcode\"\n      >\n        +\n      </button>\n      <svg\n        ref={svgRef}\n        className={styles.BarcodeSvg}\n        style={getSvgStyle(showSvgNode)}\n      />\n      {!showSvgNode && <Space>{error || 'empty'}</Space>}\n      <Input\n        className={styles.BarcodeCodeInput}\n        id={`bci_${barcode.id}`}\n        value={barcode.code}\n        onChange={e => onChange({ ...barcode, code: e.target.value })}\n        label=\"Code\"\n      />\n      <Input\n        id={`bcc_${barcode.id}`}\n        value={barcode.comment}\n        onChange={e => onChange({ ...barcode, comment: e.target.value })}\n        label=\"Comment\"\n        visibleOnPrint\n      />\n    </div>\n  );\n}\n\nBarcode.propTypes = propTypes;\n\n\nfunction compareProps(prev, next) {\n  return prev.barcode === next.barcode;\n}\n\nexport default memo(Barcode, compareProps);\n","/**\n * index.\n */\n\nimport Barcode from './Barcode';\n\nexport default Barcode;\n","/**\n * AddButton.\n */\n\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './AddButton.module.css';\n\nconst propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction AddButton(props) {\n  const { onClick } = props;\n  return (\n    <div className={styles.AddButtonContainer}>\n      <button\n        className={styles.AddButton}\n        onClick={onClick}\n        type=\"button\"\n        title=\"Add barcode\"\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nAddButton.propTypes = propTypes;\n\nexport default memo(AddButton, () => true);\n","/**\n * index.\n */\n\nimport AddButton from './AddButton';\n\nexport default AddButton;\n","/**\n * App.js\n */\n\nimport React, { Fragment } from 'react';\nimport useBarcodes from './state/useBarcodes';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport Header from './components/Header';\nimport Barcode from './components/Barcode';\nimport AddButton from './components/AddButton';\n\nfunction App() {\n  const { barcodes, actions } = useBarcodes();\n\n  return (\n    <Fragment>\n      <Header>\n        <Button onClick={actions.clear}>Clear</Button>\n        <Button onClick={() => window.print()}>Print</Button>\n      </Header>\n      <Container>\n        {barcodes.map(barcode => (\n          <Barcode\n            key={barcode.id}\n            barcode={barcode}\n            onChange={actions.change}\n            onRemove={actions.remove}\n          />\n        ))}\n        <AddButton onClick={actions.add} />\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * index.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2sF2n\",\"HeaderTitle\":\"Header_HeaderTitle__3uYHN\",\"HeaderContent\":\"Header_HeaderContent__3szWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__32Qst\",\"Printable\":\"Input_Printable__2P6G7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButtonContainer\":\"AddButton_AddButtonContainer__2o5Hj\",\"AddButton\":\"AddButton_AddButton__2Uhzr\",\"BarcodeSpace\":\"AddButton_BarcodeSpace__1KmMt\",\"BarcodeInput\":\"AddButton_BarcodeInput__1bgoY\"};"],"sourceRoot":""}