{"version":3,"sources":["components/Barcode/Barcode.module.css","components/Container/Container.module.css","state/useBarcodes.ts","components/Button/Button.tsx","components/Button/index.ts","components/Container/Container.tsx","components/Container/index.ts","components/Header/Header.tsx","components/Header/index.ts","components/Input/Input.tsx","components/Input/index.ts","components/Barcode/jsBarcode.options.ts","components/Barcode/Barcode.tsx","components/Barcode/index.ts","components/AddButton/AddButton.tsx","components/AddButton/index.ts","App.tsx","serviceWorker.js","index.tsx","styles/CircleButton.module.css","components/Header/Header.module.css","components/Button/Button.module.css","components/Input/Input.module.css","components/AddButton/AddButton.module.css"],"names":["module","exports","storageKey","getBarcodes","projectIndex","data","localStorage","getItem","projects","JSON","parse","length","id","project","barcodes","barcodesReducer","state","action","type","map","bc","payload","filter","useBarcodes","useState","setProjectIndex","useReducer","dispatch","barcodeRef","useRef","prevIndexRef","actions","clear","change","barcode","remove","add","Date","now","code","comment","useEffect","current","setItem","stringify","saveBarcodes","Button","props","children","title","onClick","className","primary","classNames","styles","ButtonPrimary","defaultProps","Container","Header","HeaderTitle","HeaderContent","Input","value","name","onChange","label","visibleOnPrint","inputClassName","Printable","maxLength","placeholder","memo","jsBarcodeOptions","encoder","code128","renderer","svgRenderer","width","height","fontSize","margins","Space","margin","style","BarcodeSpace","getSvgStyle","showSvgNode","display","Barcode","onRemove","svgRef","error","setError","JsBarcode","e","Hidden","BarcodeRemove","circleButtonStyles","CircleButton","ref","BarcodeSvg","BarcodeCodeInput","target","prev","next","AddButton","AddButtonContainer","App","window","print","key","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.509c37ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Barcode\":\"Barcode_Barcode__3yPAw\",\"BarcodeSvg\":\"Barcode_BarcodeSvg__2d1ws\",\"BarcodeSpace\":\"Barcode_BarcodeSpace__1FWtV\",\"BarcodeRemove\":\"Barcode_BarcodeRemove__3WOpM\",\"BarcodeCodeInput\":\"Barcode_BarcodeCodeInput__3xjvr\",\"Hidden\":\"Barcode_Hidden__1xyo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3SQ4O\"};","/**\n * useBarcodes.\n */\n\nimport { useReducer, useEffect, useState, useRef } from 'react';\n\n\nexport type Barcode = {\n  readonly id: number,\n  code: string,\n  comment: string,\n}\n\nexport type Project = {\n  barcodes: Barcode[],\n}\n\nexport type State = Barcode[];\n\ntype Action =\n  | { type: 'clear' }\n  | { type: 'change' | 'remove' | 'add', payload: Barcode }\n  | { type: 'switchProject', payload: Barcode[] }\n\n\nconst storageKey: string = 'barcodes';\n\nfunction getBarcodes(projectIndex: number): Barcode[] {\n  const data = localStorage.getItem(storageKey);\n  const projects = data ? JSON.parse(data) : [];\n\n  if (!projects || projects.length === 0) {\n    return [];\n  }\n\n  // If it barcodes list, not project.\n  if (projects[0].id) {\n    return projects;\n  }\n\n  const project: Project = projects[projectIndex];\n  if (!project) return [];\n\n  return project.barcodes || [];\n}\n\nfunction saveBarcodes(barcodes: Barcode[], projectIndex: number) {\n  const data = localStorage.getItem(storageKey);\n  const projects = data ? JSON.parse(data) : [];\n\n  if (projects && projects[0] && projects[0].id) {\n    localStorage.setItem(storageKey, JSON.stringify([{ barcodes }]))\n  }\n  else {\n    projects[projectIndex] = { barcodes };\n    localStorage.setItem(storageKey, JSON.stringify(projects))\n  }\n}\n\nfunction createNewBarcode(): Barcode {\n  return {\n    id: Date.now(),\n    code: '',\n    comment: '',\n  };\n}\n\n\n\nfunction barcodesReducer(state: State = [], action: Action): State {\n  switch (action.type) {\n    case 'clear': return [];\n    case 'change': return state.map(bc => bc.id === action.payload.id ? action.payload : bc);\n    case 'remove': return state.filter(bc => bc.id !== action.payload.id);\n    case 'add': return [...state, action.payload];\n    case 'switchProject': return action.payload;\n    default: return state;\n  }\n}\n\n\nfunction useBarcodes() {\n  const [projectIndex, setProjectIndex] = useState(0);\n  const [barcodes, dispatch] = useReducer(barcodesReducer, getBarcodes(projectIndex));\n  const barcodeRef = useRef(barcodes);\n  const prevIndexRef = useRef(projectIndex);\n\n  const actions = {\n    clear: () => dispatch({ type: 'clear' }),\n    change: (barcode: Barcode) => dispatch({ type: 'change', payload: barcode }),\n    remove: (barcode: Barcode) => dispatch({ type: 'remove', payload: barcode }),\n    add: () => dispatch({ type: 'add', payload: createNewBarcode() }),\n  };\n\n  useEffect(() => {\n    barcodeRef.current = barcodes;\n  }, [barcodes]);\n\n  useEffect(() => {\n    dispatch({ type: 'switchProject', payload: getBarcodes(projectIndex) });\n    prevIndexRef.current = projectIndex;\n    return () => {\n      saveBarcodes(barcodeRef.current, prevIndexRef.current);\n    };\n  }, [projectIndex]);\n\n  return { barcodes, actions, projectIndex, setProjectIndex };\n}\n\nexport default useBarcodes;\n","/**\n * Button.\n */\n\nimport React, { Fragment, ReactNode, ReactElement, MouseEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Button.module.css';\n\ntype PropTypes = {\n  type?: 'button' | 'submit',\n  title?: string,\n  children: ReactNode,\n  onClick?: (event: MouseEvent) => void,\n  className?: string,\n  primary?: boolean,\n};\n\nconst defaultProps = {\n  type: 'button',\n  primary: false,\n};\n\nfunction Button(props: PropTypes): ReactElement {\n  const {\n    children,\n    type,\n    title,\n    onClick,\n    className,\n    primary,\n  } = props;\n\n  return (\n    <Fragment>\n      <button\n        type={type}\n        onClick={onClick}\n        className={classNames(styles.Button, primary && styles.ButtonPrimary, className)}\n        title={title}\n      >\n        {children}\n      </button>\n      {' '}\n    </Fragment>\n  );\n}\n\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","/**\n * index.\n */\n\nimport Button from './Button';\n\nexport default Button;\n","/**\n * Container.\n */\n\nimport React, { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\ntype PropTypes = {\n  children: ReactNode,\n};\n\nfunction Container({ children }: PropTypes): ReactElement {\n  return (\n    <div className={styles.Container}>\n      {children}\n    </div>\n  );\n}\n\nexport default Container;\n","/**\n * index.\n */\n\nimport Container from './Container';\n\nexport default Container;\n","/**\n * Header.\n */\n\nimport React, { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Header.module.css';\n\ntype PropTypes = {\n  children: ReactNode,\n};\n\nfunction Header(props: PropTypes): ReactElement {\n  const { children } = props;\n\n  return (\n    <div className={styles.Header}>\n      <h1 className={styles.HeaderTitle}>Barcoder</h1>\n      <div className={styles.HeaderContent}>{children}</div>\n    </div>\n  );\n}\n\nexport default Header;\n","/**\n * index.\n */\n\nimport Header from './Header';\n\nexport default Header;\n","/**\n * Input.\n */\n\nimport React, { ChangeEvent, memo, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Input.module.css';\n\ntype PropTypes = {\n  value?: string,\n  id: string,\n  name?: string,\n  label: ReactNode,\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void,\n  className?: string,\n  visibleOnPrint?: boolean,\n};\n\nconst defaultProps = {\n  value: '',\n  visibleOnPrint: false,\n};\n\nfunction Input(props: PropTypes) {\n  const {\n    value,\n    id,\n    name = id,\n    onChange,\n    label,\n    className,\n    visibleOnPrint,\n  } = props;\n\n  const inputClassName = classNames(\n    styles.Input,\n    visibleOnPrint && !!value && styles.Printable,\n    className,\n  );\n\n  return (\n    <label className={inputClassName}>\n      <input\n        type=\"text\"\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        maxLength={25}\n        placeholder=\" \"\n      />\n      <span>{label}</span>\n    </label>\n  );\n}\n\nInput.defaultProps = defaultProps;\n\nexport default memo(Input);\n","/**\n * index.\n */\n\nimport Input from './Input';\n\nexport default Input;\n","/**\n * jsBarcode.options.\n */\n\nimport { BaseOptions } from 'jsbarcode';\nimport code128 from 'jsbarcode/lib/barcodes/CODE128/CODE128_AUTO';\nimport svgRenderer from 'jsbarcode/lib/renderers/svg';\n\ntype ExtendedOptions = BaseOptions & {\n  encoder: Function,\n  renderer: Function,\n  margins: number,\n  height: number,\n  fontSize: number,\n};\n\nconst jsBarcodeOptions: ExtendedOptions = {\n  encoder: code128,\n  renderer: svgRenderer,\n  width: 2,\n  height: 100,\n  fontSize: 20,\n  margins: 16,\n};\n\nexport default jsBarcodeOptions;\n","/**\n * Barcode.\n */\n\nimport React, { useRef, useEffect, useState, memo, ReactNode, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport JsBarcode from 'jsbarcode';\nimport Input from '../Input';\nimport Button from '../Button';\nimport jsBarcodeOptions from './jsBarcode.options';\nimport styles from './Barcode.module.css';\nimport { Barcode as BarcodeType } from '../../state/useBarcodes';\nimport circleButtonStyles from '../../styles/CircleButton.module.css';\n\n\nfunction Space({ children }: { children: ReactNode }): ReactElement {\n  const margin = 16;\n  const height = jsBarcodeOptions.height\n    + (jsBarcodeOptions.margins * 2)\n    + (jsBarcodeOptions.fontSize / 2)\n    - (margin * 2);\n\n  return (\n    <div style={{ height, margin }} className={styles.BarcodeSpace}>\n      {children}\n    </div>\n  );\n}\n\nfunction getSvgStyle(showSvgNode: boolean): { display: string } {\n  return {\n    display: showSvgNode ? 'block' : 'none',\n  };\n}\n\n\ntype PropTypes = {\n  barcode: BarcodeType,\n  onChange: (barcode: BarcodeType) => void,\n  onRemove: (barcode: BarcodeType) => void,\n};\n\nfunction Barcode(props: PropTypes): ReactElement {\n  const { barcode, onChange, onRemove } = props;\n\n  const svgRef = useRef(null);\n  const [error, setError] = useState('');\n\n  const showSvgNode = !error && (!svgRef || (svgRef && !!barcode.code));\n\n  useEffect(() => {\n    if (barcode.code) {\n      try {\n        JsBarcode(svgRef.current, barcode.code, jsBarcodeOptions);\n        if (error) setError('');\n      } catch (e) {\n        setError('invalid input')\n      }\n    }\n  }, [barcode, error]);\n\n  const className = classNames(styles.Barcode, !showSvgNode && styles.Hidden);\n\n  return (\n    <div className={className}>\n      <Button\n        className={`${styles.BarcodeRemove} ${circleButtonStyles.CircleButton}`}\n        onClick={() => onRemove(barcode)}\n        type=\"button\"\n        title=\"Remove barcode\"\n      >\n        +\n      </Button>\n      <svg\n        ref={svgRef}\n        className={styles.BarcodeSvg}\n        style={getSvgStyle(showSvgNode)}\n      />\n      {!showSvgNode && <Space>{error || 'empty'}</Space>}\n      <Input\n        className={styles.BarcodeCodeInput}\n        id={`bci_${barcode.id}`}\n        value={barcode.code}\n        onChange={e => onChange({ ...barcode, code: e.target.value })}\n        label=\"Code\"\n      />\n      <Input\n        id={`bcc_${barcode.id}`}\n        value={barcode.comment}\n        onChange={e => onChange({ ...barcode, comment: e.target.value })}\n        label=\"Comment\"\n        visibleOnPrint\n      />\n    </div>\n  );\n}\n\n\nfunction compareProps(prev: PropTypes, next: PropTypes) {\n  return prev.barcode === next.barcode;\n}\n\nexport default memo(Barcode, compareProps);\n","/**\n * index.\n */\n\nimport Barcode from './Barcode';\n\nexport default Barcode;\n","/**\n * AddButton.\n */\n\nimport React, { MouseEvent, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport circleButtonStyles from '../../styles/CircleButton.module.css';\nimport styles from './AddButton.module.css';\n\ntype PropTypes = {\n  onClick: (event: MouseEvent) => void,\n};\n\nfunction AddButton(props: PropTypes): ReactElement {\n  const { onClick } = props;\n  return (\n    <div className={styles.AddButtonContainer}>\n      <Button\n        className={`${styles.AddButton} ${circleButtonStyles.CircleButton}`}\n        onClick={onClick}\n        title=\"Add barcode\"\n        primary\n      >\n        +\n      </Button>\n    </div>\n  );\n}\n\nexport default AddButton;\n","/**\n * index.\n */\n\nimport AddButton from './AddButton';\n\nexport default AddButton;\n","/**\n * App.\n */\n\nimport React, { Fragment, ReactElement } from 'react';\nimport useBarcodes from './state/useBarcodes';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport Header from './components/Header';\nimport Barcode from './components/Barcode';\nimport AddButton from './components/AddButton';\n\nfunction App(): ReactElement {\n  const { barcodes, actions, projectIndex, setProjectIndex } = useBarcodes();\n\n  return (\n    <Fragment>\n      <Header>\n        <Button onClick={actions.clear}>Clear</Button>\n        <Button primary onClick={() => window.print()}>Print</Button>\n      </Header>\n      <Container>\n        <Button primary={projectIndex === 0} onClick={() => setProjectIndex(0)}>1</Button>\n        <Button primary={projectIndex === 1} onClick={() => setProjectIndex(1)}>2</Button>\n        <Button primary={projectIndex === 2} onClick={() => setProjectIndex(2)}>3</Button>\n      </Container>\n      <Container>\n        {barcodes.map(barcode => (\n          <Barcode\n            key={barcode.id}\n            barcode={barcode}\n            onChange={actions.change}\n            onRemove={actions.remove}\n          />\n        ))}\n      </Container>\n      <AddButton onClick={actions.add} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * index.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CircleButton\":\"CircleButton_CircleButton__1Sc0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2Ju7O\",\"HeaderTitle\":\"Header_HeaderTitle__2P-6f\",\"HeaderContent\":\"Header_HeaderContent__OX7_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__dTdoO\",\"ButtonPrimary\":\"Button_ButtonPrimary__2Enhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2QxXH\",\"Printable\":\"Input_Printable__8SV6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButtonContainer\":\"AddButton_AddButtonContainer__1IJvW\",\"AddButton\":\"AddButton_AddButton__3Gjq2\",\"BarcodeSpace\":\"AddButton_BarcodeSpace__rZuXz\",\"BarcodeInput\":\"AddButton_BarcodeInput__8HR5m\"};"],"sourceRoot":""}